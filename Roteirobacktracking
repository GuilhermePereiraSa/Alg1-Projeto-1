Introdução à Backtracking
    é normalmente usado em subrotinas, em algoritmos maiores, e uma alternativa usando Força Bruta, porém,
otimizando também por "perceber" quando necessário a finalização "premátura" de um processo em andamento para encontrar
uma solução local, que pode ser uma global pela permutação de alternativas que temos. Então ele será implementado para explorar
todas as opções, como um método de Força Bruta típico, porém sempre possuindo um "caminho de volta", fixado, e procurando a melhor
solução. Então ele faz um "undo", logo, podemos pensar na estrutura de uma pilha, já que o último que entra é o primeiro a sair LIFO.
E, uma coisa que não ficou muito clara, mas caso NÃO encontrarmos uma solução apenas voltamos para a anterior.

    Como ele será implementado?
        A ideia aqui é de "podar", já que tratamos de uma árvore de "processos", escolhas, a serem tomadas por cada cidade,
    e o algoritmo ao analisar um "ramo" da árvore, percebendo que é pior que o anterior, ou seja, fixamos, tomamos o anterior,
    ou que aparecer, no nosso caso, ter o menor custo, como a melhor opção e apenas comparamos com o atual caminho seguido. E, se
    em algum caso, ultrapassar esse menor custo, já podemos retirar esse "ramo", essa possibilidade de caminho, como a que garantiria o
    menor custo.

